## -- Install CA-APM Machine Agent
##################################


- name: Copy AUDI_Standard_Infrastructure_Agent_TuI_v6.tar.gz  file to server
  copy:
     src: "{{ playbook_dir }}/../roles/ca-apm-agent/files/AUDI_Standard_Infrastructure_Agent_TuI_v6.tar.gz"
     dest: "/tmp/AUDI_Standard_Infrastructure_Agent_TuI_v6.tar.gz"
  when: not ansible_check_mode and STATE == "present"
  tags:
    - ca-apm
    - machineagent

- name: create /opt/ca-apm/ folder
  file:
    path: /opt/ca-apm/
    state: directory
    force: no
  when: not ansible_check_mode  and STATE == "present"
  tags:
    - ca-apm
    - machineagent

- name: untar "/tmp/AUDI_Standard_Infrastructure_Agent_TuI_v6.tar.gz" to /opt/ca-apm
  unarchive:
    src: "/tmp/AUDI_Standard_Infrastructure_Agent_TuI_v6.tar.gz"
    dest: /opt/ca-apm
    remote_src: yes
  when: not ansible_check_mode and STATE == "present"
  tags:
    - ca-apm
    - machineagent

- name: cd to /opt/ca-apm/ and run ./apmia-ca-installer.sh
  script: apmia-ca-installer.sh
  args:
    chdir: /opt/ca-apm/
  when: not ansible_check_mode and STATE == "present"
  tags:
    - ca-apm
    - machineagent

## UNINSTALL

- name: remove cronjob
  cron:
    special_time: reboot
    job: "/opt/ca-apmia/apmia/apmia-ca-installer.sh start"
    state: "{{ STATE }}"
    user: "root"
  when: not ansible_check_mode

- name: stop machineagent
  shell: "pkill -f /opt/ca-apmia/apmia"
  when: not ansible_check_mode and STATE == "absent"
  ignore_errors: true
  tags:
    - ca-apm
    - machineagent

- name: delete /opt/ca-apmia/ folder
  shell: "rm -rf /opt/ca-apmia"
  when: not ansible_check_mode  and STATE == "absent"
  tags:
    - ca-apm
    - machineagent

- name: delete
  file:
    path: 
